git config --global user.name "<username>"
	#set the username
git config --global user.email <email>
	#set the email

git clone <repository>
	#clone from repository, creating a project with the same name of that
git init
	#create a new project from zero
git status
	#Check status for tracked and untracked files, staged and unstaged
git add <file>
	#track and stage the <file>
git commit -m "<desc>"
	#local commit of tracked(and staged) repository with description name <desc>
git push
	#load local commit to remote
git pull
	#modified files in remote commit update the local commit
git rm <file>
	#remove <file> (until new commit, <file> can be ripristinated

#status of file: untracked->unmodified->modified->staged

#__________________2nd LESSON________________________

#note: In 2nd lesson, most part of commands are shown with TortoiseGit, gui for git
git brnch <branch_name>
	#create a branch of name <branch_name> in local
git checkout <branch_name>
	#move in branch <branch_name> in local
git push <remote_branch_name> <local_branch_name>
	#push branch <local_branch_name> in remote with name <remote_branch_name>
git checkout <remote_branch_name>
	#pull branch
git merge <branch_name> 
	#merge the current branch with <branch_name> specified
#merge conflicts and .gitignore explained with TortoiseGit